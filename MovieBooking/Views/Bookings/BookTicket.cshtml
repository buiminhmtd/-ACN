﻿@model MovieBooking.Models.BookingModel
@{
    int movie_id = int.Parse(ViewBag.movieid);

}
<style>


    .containerr {
        max-width: 1200px;
        margin: 0 auto;
        background-color: #333;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .selection-container {
        display: flex;
        gap: 20px;
        margin-bottom: 30px;
    }

    .selection-box {
        flex: 1;
        border: 1px solid #ddd;
        padding: 15px;
        border-radius: 8px;
    }

        .selection-box select,
        .selection-box input {
            width: 100%;
            padding: 10px;
            margin-top: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

    .movie-header {
        display: flex;
        align-items: center;
        margin-bottom: 30px;
        border-bottom: 2px solid #eee;
        padding-bottom: 20px;
    }

    .movie-poster {
        width: 200px;
        height: 300px;
        object-fit: cover;
        margin-right: 30px;
        border-radius: 8px;
    }

    .screen {
        width: 100%;
        height: 50px;
        background-color: white;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 30px;
        color: #333;
        font-weight: bold;
    }

    .seat-map {
        display: grid;
        grid-template-columns: repeat(14, 1fr);
        gap: 10px;
        margin-bottom: 20px;
    }

    .seat {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 10px;
        text-align: center;
        border-radius: 5px;
        cursor: pointer;
        font-size: 12px;
    }

        .seat.vip {
            background-color: #FF9800;
        }

        .seat.booked {
            background-color: #9e9e9e;
            cursor: not-allowed;
        }

        .seat.selected {
            background-color: #2196F3;
        }

    .seat-types {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-bottom: 20px;
    }

    .seat-type {
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .seat-type .seat {
            width: 20px;
            height: 20px;
        }

    .booking-summary {
        background-color: #333;
        padding: 20px;
        border: 1px solid white;
        border-radius: 8px;
        margin-top: 20px;
    }

    .confirm-button {
        display: block;
        width: 100%;
        padding: 15px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 18px;
        cursor: pointer;
        margin-top: 20px;
    }

        .confirm-button:hover {
            background-color: #45a049;
        }

    .hidden {
        display: none;
    }
    /* Style chung cho form */
    .form-container {
        width: 100%;
        max-width: 500px; /* Độ rộng tối đa của form */
        margin: 0 auto; /* Căn giữa */
        background-color: transparent;
        padding-left: 300px;
        border-radius: 10px;
    }

    .form-row {
        margin-bottom: 15px;
    }

        .form-row label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
            color: #fff; /* Màu chữ sáng */
        }

        .form-row input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #f9f9f9;
            color: #333;
        }

            .form-row input[readonly] {
                background-color: #e9ecef; /* Màu nhạt hơn cho input readonly */
                color: #555; /* Chữ màu tối hơn khi readonly */
            }
</style>
<body>
    <div class="containerr">
        <div style="display:flex;">
            <div class="movie-header">
                <img src="@Model.Movies.Find(movie_id).image_url" alt="Avenger" class="movie-poster">
                <div class="movie-info">
                    <h1>@Model.Movies.Where(p => p.movie_id == movie_id).Single().title </h1>
                    <p>@Model.Movies.Where(p => p.movie_id == movie_id).Single().description</p>

                </div>
            </div>

            <div>
                @if (Session["userName"] != null)
                {
                    <div class="form-container">
                        <div class="form-row">
                            <label for="name">Họ và tên:</label>
                            <input type="text" id="name" name="name" value="@Session["userName"]" readonly required>
                        </div>

                        <div class="form-row">
                            <label for="email">Email:</label>
                            <input type="email" id="email" name="email" value="@Session["userEmail"]">
                        </div>

                        <div class="form-row">
                            <label for="phone">Số điện thoại:</label>
                            <input type="tel" id="phone" name="phone" value="@Session["userPhone"]">
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="selection-container">
            <div class="selection-box">
                <h3>Chọn Ngày</h3>
                <input type="date" id="dateSelection">
            </div>
            <div class="selection-box">
                <h3>Chọn Xuất Chiếu</h3>
                <select id="showTimeSelection">
                    <option value="" id="showtimeDisplay">Chọn Xuất Chiếu</option>

                </select>
            </div>
            <div class="selection-box">
                <h3>Chọn Phòng Chiếu</h3>
                <select id="roomSelection">
                    <option value="">Chọn Phòng Chiếu</option>
                    <option value="1">Phòng 1 - Thường</option>
                    <option value="2">Phòng 2 - VIP</option>
                </select>
            </div>
        </div>

        <div id="seatSection" class="hidden">
            <div class="screen">
                MÀN HÌNH
            </div>

            <div class="seat-map">
                <!-- Hàng A -->
                <div style="grid-column: 1 / span 16; text-align: center; margin-bottom: 10px;">A</div>
                <button class="seat">A1</button>
                <button class="seat">A2</button>
                <button class="seat">A3</button>
                <button class="seat">A4</button>
                <button class="seat">A5</button>
                <button class="seat vip">A6</button>
                <button class="seat vip">A7</button>
                <button class="seat vip">A8</button>
                <button class="seat vip">A9</button>
                <button class="seat">A10</button>
                <button class="seat">A11</button>
                <button class="seat">A12</button>
                <button class="seat">A13</button>
                <button class="seat">A14</button>


                <!-- Hàng B -->
                <div style="grid-column: 1 / span 16; text-align: center; margin-bottom: 10px;">B</div>
                <button class="seat">B1</button>
                <button class="seat">B2</button>
                <button class="seat">B3</button>
                <button class="seat">B4</button>
                <button class="seat">B5</button>
                <button class="seat vip">B6</button>
                <button class="seat vip">B7</button>
                <button class="seat vip">B8</button>
                <button class="seat vip">B9</button>
                <button class="seat">B10</button>
                <button class="seat">B11</button>
                <button class="seat">B12</button>
                <button class="seat">B13</button>
                <button class="seat">B14</button>

                <div style="grid-column: 1 / span 16; text-align: center; margin-bottom: 10px;">C</div>
                <button class="seat">C1</button>
                <button class="seat">C2</button>
                <button class="seat">C3</button>
                <button class="seat">C4</button>
                <button class="seat">C5</button>
                <button class="seat vip">C6</button>
                <button class="seat vip">C7</button>
                <button class="seat vip">C8</button>
                <button class="seat vip">C9</button>
                <button class="seat">C10</button>
                <button class="seat">C11</button>
                <button class="seat">C12</button>
                <button class="seat">C13</button>
                <button class="seat">C14</button>

                <div style="grid-column: 1 / span 16; text-align: center; margin-bottom: 10px;">D</div>
                <button class="seat">D1</button>
                <button class="seat">D2</button>
                <button class="seat">D3</button>
                <button class="seat">D4</button>
                <button class="seat">D5</button>
                <button class="seat vip">D6</button>
                <button class="seat vip">D7</button>
                <button class="seat vip">D8</button>
                <button class="seat vip">D9</button>
                <button class="seat">D10</button>
                <button class="seat">D11</button>
                <button class="seat">D12</button>
                <button class="seat">D13</button>
                <button class="seat">D14</button>

            </div>

            <div class="seat-types">
                <div class="seat-type">
                    <div class="seat"></div>
                    <span>Ghế Thường</span>
                </div>
                <div class="seat-type">
                    <div class="seat vip"></div>
                    <span>Ghế VIP</span>
                </div>
                <div class="seat-type">
                    <div class="seat booked"></div>
                    <span>Ghế Đã Đặt</span>
                </div>
            </div>
        </div>

        <div id="bookingSummary" class="booking-summary hiddenn">
            <h2>Thông Tin Đặt Vé</h2>
            <p><strong>Ngày:</strong> <span id="selectedDate"></span></p>
            <p><strong>Xuất Chiếu:</strong> <span id="selectedShowTime"></span></p>
            <p><strong>Phòng Chiếu:</strong> <span id="selectedRoom"></span></p>
            <p><strong>Số Ghế Đã Chọn:</strong> <span id="selectedSeats">0</span></p>
            <p><strong>Tổng Tiền:</strong> <span id="totalPrice">0</span> VND</p>
            <button class="confirm-button">Xác Nhận Đặt Vé</button>
        </div>

    </div>

    <script>
        const dateSelection = document.getElementById('dateSelection');
        const showTimeSelection = document.getElementById('showTimeSelection');
        const roomSelection = document.getElementById('roomSelection');
        const seatSection = document.getElementById('seatSection');
        const bookingSummary = document.getElementById('bookingSummary');
        const selectedDateSpan = document.getElementById('selectedDate');
        const selectedShowTimeSpan = document.getElementById('selectedShowTime');
        const selectedRoomSpan = document.getElementById('selectedRoom');

        const seats = document.querySelectorAll('.seat');
        const selectedSeatsSpan = document.getElementById('selectedSeats');
        const totalPriceSpan = document.getElementById('totalPrice');
        const priceNormal = 150000;
        const priceVIP = 200000;
        let selectedSeatsCount = 0;
        let totalPrice = 0;

        /////////////////////////////////////////////
        function updateSeatStatus(dateSelection, showTimeSelection, roomSelection) {
            if (!dateSelection.value || !showTimeSelection.value || !roomSelection.value) {
                return;
            }
            console.log(dateSelection.value, showTimeSelection.value, roomSelection.value);

            $.ajax({
                url: '/Bookings/GetSeatStatus',
                type: 'GET',
                data: {
                    movie_id: @movie_id,
                    start_time: (dateSelection.value + ' ' + showTimeSelection.value),
                    screen_id: roomSelection.value
                },
                success: function (seatStatuses) {
                    seats.forEach(seat => {
                        seat.classList.remove('booked');
                    });

                    seatStatuses.forEach(function (seat) {
                        const seatElement = Array.from(seats).find(el => el.textContent === seat.seat_label);
                        if (seatElement) {
                            seatElement.classList.add('booked');
                        }
                    });
                }
            });
        }
        /////////////////////////////////////////////
        function updateShowTime(dateSelection) {
            if (!dateSelection.value) {
                return;
            }

            $.ajax({
                url: '/Bookings/GetShowTimes',
                type: 'GET',
                data: {
                    date: dateSelection.value
                },
                success: function (response) {
                    // Kiểm tra và xử lý dữ liệu trả về
                    if (response && response.length > 0) {
                        const showTimeSelect = document.getElementById('showTimeSelection');
                        showTimeSelect.innerHTML = ''; // Xóa các option cũ

                        // Thêm option mặc định
                        var defaultOption = document.createElement('option');
                        defaultOption.value = '';
                        defaultOption.textContent = 'Chọn Xuất Chiếu';
                        showTimeSelect.appendChild(defaultOption);

                        // Thêm các option mới từ dữ liệu trả về
                        response.forEach(showtime => {
                            const option = document.createElement('option');
                            option.value = showtime.time; // Lấy giá trị giờ (HH:mm:ss)
                            option.textContent = `${showtime.time}`; // Hiển thị giờ
                            showTimeSelect.appendChild(option);
                        });

                        // Tự động chọn xuất chiếu đầu tiên (nếu cần)

                        // Gọi lại validateSelections để hiển thị các thông tin đã chọn
                        // validateSelections();
                    } else {
                        // Nếu không có dữ liệu, hiển thị thông báo hoặc để trống
                        alert('Không có xuất chiếu nào cho ngày này.');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi khi lấy danh sách showtime:", error);
                    alert('Không thể tải danh sách xuất chiếu. Vui lòng thử lại sau.');
                }
            });
        }

        // Gọi hàm khi trang load

        //$(document).ready(function () {
        //    updateShowTime(dateSelection);
        //    updateSeatStatus(dateSelection.value, showTimeSelection.value, roomSelection.value);
        //});

        ///////////////////
        // Kiểm tra và hiển thị phần chọn ghế
        function validateSelections() {
            // Kiểm tra điều kiện để hiển thị thông tin đã chọn
            if (dateSelection.value) {
                updateShowTime(dateSelection);
            }
            if (dateSelection.value && showTimeSelection.value && roomSelection.value) {
                seatSection.classList.remove('hidden');
                bookingSummary.classList.remove('hidden');

                // Cập nhật thông tin đã chọn
                selectedDateSpan.textContent = dateSelection.value;

                // Cập nhật xuất chiếu

                //defaultOption.textContent = showTimeSelection.options[showTimeSelection.selectedIndex].text;
                selectedShowTimeSpan.textContent = showTimeSelection.options[showTimeSelection.selectedIndex].text;
                //showTimeSelection.textContent = showTimeSelection.options[showTimeSelection.selectedIndex].text;
                //selectedShowTimeSpan.textContent = defaultOption.textContent;
                // Cập nhật phòng
                selectedRoomSpan.textContent = roomSelection.options[roomSelection.selectedIndex].text;
                // Cập nhật tình trạng ghế
                updateSeatStatus(dateSelection, showTimeSelection, roomSelection);
            }
        }

        // Lấy giá trị ngày đã chọn từ input
        document.getElementById('dateSelection').addEventListener('change', function() {
            var selectedDate = this.value;  // Lấy giá trị ngày đã chọn

            // Gọi phương thức để lọc và hiển thị xuất chiếu dựa trên ngày đã chọn
            filterShowtimesByDate(selectedDate);
            //Lấy ra showtime theo ngày
            // Cập nhật showtime dựa trên ngày
            updateShowTime(this);  // Truyền trực tiếp 'this' (dateSelection) vào hàm updateShowTime

            // Gọi validateSelections để cập nhật thông tin đã chọn ngay khi người dùng chọn ngày
            validateSelections();
        });


        // Thêm sự kiện cho các dropdown
        dateSelection.addEventListener('change', validateSelections);
        showTimeSelection.addEventListener('change', validateSelections);
        roomSelection.addEventListener('change', validateSelections);

        // Xử lý chọn ghế
        seats.forEach(seat => {
            seat.addEventListener('click', () => {
                if (!seat.classList.contains('booked')) {
                    seat.classList.toggle('selected');

                    // Tính toán số ghế và giá tiền
                    if (seat.classList.contains('selected')) {
                        selectedSeatsCount++;
                        totalPrice += seat.classList.contains('vip') ? priceVIP : priceNormal;
                    } else {
                        selectedSeatsCount--;
                        totalPrice -= seat.classList.contains('vip') ? priceVIP : priceNormal;
                    }

                    selectedSeatsSpan.textContent = selectedSeatsCount;
                    totalPriceSpan.textContent = totalPrice.toLocaleString();
                }
            });
        });
        ////////////////////////////////////////////////////////
        // Xử lý nút đặt vé

document.querySelector('.confirm-button').addEventListener('click', function() {
    // Các validation như trước...
    if (!dateSelection.value) {
        alert('Vui lòng chọn ngày');
        return;
    }

    if (!selectedShowTimeSpan.textContent) {
        alert('Vui lòng chọn xuất chiếu');
        return;
    }

    if (!roomSelection.value) {
        alert('Vui lòng chọn phòng chiếu');
        return;
    }

    if (selectedSeatsCount === 0) {
        alert('Vui lòng chọn ghế');
        return;
    }

    const selectedSeatLabels = Array.from(document.querySelectorAll('.seat.selected'))
        .map(seat => seat.textContent);

    // Gửi dữ liệu booking
    $.ajax({
        url: '/Bookings/CreateBooking',
        type: 'POST',
        data: {
            movieId: @movie_id,
            date: dateSelection.value,
            showTime: selectedShowTimeSpan.textContent,
            screenId: roomSelection.value,
            selectedSeats: selectedSeatLabels,
            totalPrice: totalPrice
        },
        success: function(response) {
            if (response.success) {
                const paymentUrl = "/Bookings/PaymentWithPaypal"
                window.location.href = paymentUrl;
            } else {
                alert(response.message);
            }
        },
        error: function() {
            alert('Có lỗi xảy ra. Vui lòng thử lại.');
        }
    });
});
    </script>
</body>